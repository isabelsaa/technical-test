security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
    providers:
        user_provider:
            entity:
                class: App\Entity\User
        users_in_memory:
            memory:
                users:
                    admin2:
                        password: admin
                        roles: ROLE_ADMIN
                    admin3:
                        password: admin
                        roles: ROLE_PAGE_1
    role_hierarchy:
        ROLE_ADMIN: ROLE_PAGE_1, ROLE_PAGE_2
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_secured:
            pattern: ^/api
            stateless: true
            http_basic:
                realm: "My fantastic API REST"
                provider: users_in_memory
        main:
            anonymous: lazy
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\LoginCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/page/1, roles: ROLE_PAGE_1 }
         - { path: ^/page/2, roles: ROLE_PAGE_2 }
         - { path: ^/api, roles: ROLE_ADMIN }
# config/packages/security.yaml